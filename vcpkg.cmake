function (setup_vcpkg)
    message(STATUS $ENV{VCPKG_PATH})
    if (NOT DEFINED ENV{VCPKG_PATH})
        message(FATAL_ERROR "Please call find_vcpkg before setup_vcpkg")
    endif()
    get_filename_component(VCPKG_DIR $ENV{VCPKG_PATH} DIRECTORY)
    message(STATUS "VCPKG dir in ${VCPKG_DIR}")
    set (CMAKE_TOOLCHAIN_FILE ${VCPKG_DIR}/scripts/buildsystems/vcpkg.cmake PARENT_SCOPE)
endfunction()

function (find_vcpkg)
    if(WIN32)
        set(FIND_PROGRAM_COMMAND where)
    elseif(UNIX)
        set(FIND_PROGRAM_COMMAND which)
    else()
        message(FATAL_ERROR "unkown platform")
    endif()
    execute_process(COMMAND ${FIND_PROGRAM_COMMAND} vcpkg ERROR_VARIABLE cmd_error OUTPUT_VARIABLE cmd_output OUTPUT_STRIP_TRAILING_WHITESPACE)
    if (NOT cmd_error)
        message(STATUS "vcpkg found in ${cmd_output}")
        set(ENV{VCPKG_PATH} ${cmd_output})
        setup_vcpkg()
    else()
        message(FATAL_ERROR "vcpkg not in path please set VCPKG_PATH variable or insert vcpkg into PATH")
    endif()
    set (CMAKE_TOOLCHAIN_FILE ${CMAKE_TOOLCHAIN_FILE} PARENT_SCOPE)
endfunction()

function (vcpkg_install_library library_name)
    find_vcpkg()
    message(STATUS "Installing library ${library_name} with $ENV{VCPKG_PATH}")
    message(STATUS "$ENV{VCPKG_PATH} install ${library_name}")
    execute_process(COMMAND $ENV{VCPKG_PATH} install ${library_name} OUTPUT_VARIABLE cmd_ouput)
    message(STATUS ${cmd_output})
endfunction()